<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pers.cherish.commentservice.mapper.CommentMapper">


    <delete id="delete">
        delete from t_comment
        where video_id = #{videoId} and comment_id = #{commentId}
    </delete>

    <select id="getChildTree" resultType="pers.cherish.commentservice.domain.CommentTreeNode">
        select
        comment_id as commentId,
        video_id as videoId,
        parent_id as parentId,
        author_id as authorId,
        content,
        comment_time as CommentTime,
        like_count as likeCount,
        is_deleted as isDeleted,
        reply_id as replyId
        from t_comment
        where video_id = #{videoId} and parent_id = #{parentId}
        order by like_count desc
        limit #{startIndex}, #{endIndex}
    </select>

    <select id="getChildTreeByTime" resultType="pers.cherish.commentservice.domain.CommentTreeNode">
        select
            comment_id as commentId,
            video_id as videoId,
            parent_id as parentId,
            author_id as authorId,
            content,
            comment_time as CommentTime,
            like_count as likeCount,
            is_deleted as isDeleted,
            reply_id as replyId
        from t_comment
        where video_id = #{videoId} and parent_id = #{parentId}
        limit #{startIndex}, #{endIndex}
    </select>
    <select id="getChildTreeAll" resultType="pers.cherish.commentservice.domain.CommentTreeNode">
        select
            comment_id as commentId,
            video_id as videoId,
            parent_id as parentId,
            author_id as authorId,
            content,
            comment_time as CommentTime,
            like_count as likeCount,
            is_deleted as isDeleted,
            reply_id as replyId
        from t_comment
        where video_id = #{videoId}
        order by like_count desc
    </select>
    <select id="getChildByList" resultType="pers.cherish.commentservice.domain.CommentTreeNode">
        select comment_id as commentId,
               video_id as videoId,
               parent_id as parentId,
               author_id as authorId,
               content,
               comment_time as CommentTime,
               like_count as likeCount,
               is_deleted as isDeleted,
               reply_id as replyId
        from t_comment
        where video_id = #{videoId} and parent_id in
        <foreach collection="baseCommentList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getMyComments" resultType="pers.cherish.commentservice.Comment">
        select *
        from t_comment
        where author_id = #{authorId}
        order by comment_time desc
    </select>
    <select id="getCommentReply" resultType="pers.cherish.commentservice.domain.CommentTreeNode">
        select
            comment_id as commentId,
            video_id as videoId,
            parent_id as parentId,
            author_id as authorId,
            content,
            comment_time as CommentTime,
            like_count as likeCount,
            is_deleted as isDeleted,
            reply_id as replyId
        from t_comment
        where video_id = #{videoId} and reply_id = #{commentId}
        order by like_count desc
    </select>
    <select id="getMyCommentsPages" resultType="pers.cherish.commentservice.Comment">
        select *
        from t_comment
        where author_id = #{authorId}
        order by comment_time desc
        limit #{startIndex}, #{endIndex}
    </select>
    <select id="isExist" resultType="java.lang.Boolean">
        select exists(select 1 from t_comment where video_id = #{videoId}
                                                and comment_id = #{commentId})
    </select>


</mapper>