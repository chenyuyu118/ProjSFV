<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pers.cherish.commentservice.mapper.CommentMapper">
    <resultMap id="CommentTreeNodeMap" type="pers.cherish.commentservice.domain.CommentTreeNode">
        <result column="comment_id" property="commentId"/>
        <result column="parent_id" property="parentId"/>
        <result column="author_id" property="authorId"/>
        <result column="content" property="content"
                typeHandler="pers.cherish.commentservice.config.BlobTypeHandler"/>
        <result column="comment_time" property="commentTime"/>
        <result column="like_count" property="likeCount"/>
        <result column="is_deleted" property="isDeleted"/>
        <result column="reply_id" property="replyId"/>
    </resultMap>

    <delete id="delete">
        delete from t_comment
        where video_id = #{videoId} and comment_id = #{commentId}
    </delete>

    <select id="getChildTree" resultMap="CommentTreeNodeMap">
        select
        comment_id,
        parent_id,
        author_id,
        content,
        comment_time,
        like_count,
        is_deleted,
        reply_id
        from t_comment
        where video_id = #{videoId} and parent_id = #{parentId}
        order by like_count desc
        limit #{startIndex}, #{endIndex}
    </select>

    <select id="getChildTreeByTime" resultMap="CommentTreeNodeMap">
        select
            comment_id,
            video_id,
            parent_id,
            author_id,
            content,
            comment_time,
            like_count,
            is_deleted,
            reply_id
        from t_comment
        where video_id = #{videoId} and parent_id = #{parentId}
        limit #{startIndex}, #{endIndex}
    </select>
    <select id="getChildTreeAll" resultMap="CommentTreeNodeMap">
        select
            comment_id,
            video_id,
            parent_id,
            author_id,
            content,
            comment_time,
            like_count,
            is_deleted,
            reply_id
        from t_comment
        where video_id = #{videoId}
        order by like_count desc
    </select>
    <select id="getChildByList" resultMap="CommentTreeNodeMap">
        select
            comment_id,
            video_id,
            parent_id,
            author_id,
            content,
            comment_time,
            like_count,
            is_deleted,
            reply_id
        from t_comment
        where video_id = #{videoId} and parent_id in
        <foreach collection="baseCommentList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getMyComments" resultType="pers.cherish.commentservice.Comment">
        select *
        from t_comment
        where author_id = #{authorId}
        order by comment_time desc
    </select>
    <select id="getCommentReply" resultMap="CommentTreeNodeMap">
        select
            comment_id,
            video_id,
            parent_id,
            author_id,
            content,
            comment_time,
            like_count,
            is_deleted,
            reply_id
        from t_comment
        where video_id = #{videoId} and reply_id = #{commentId}
        order by like_count desc
    </select>
    <select id="getMyCommentsPages" resultType="pers.cherish.commentservice.Comment">
        select *
        from t_comment
        where author_id = #{authorId}
        order by comment_time desc
        limit #{startIndex}, #{endIndex}
    </select>
    <select id="isExist" resultType="java.lang.Boolean">
        select exists(select 1 from t_comment where video_id = #{videoId}
                                                and comment_id = #{commentId})
    </select>


</mapper>